---
# Read or generate encrypt key with first server
- block:
  # Read encrypt key
  - block:
    - name: Read the Master token
      shell:
        cmd: "cat /etc/consul.d/consul.hcl | egrep -i '[[:blank:]]master' | awk '{print $3}' | sed 's/\"//g'"
      register: master_tokens_read
    
    - name: Save the gossip encryption key
      set_fact:
        encrypt_key: "{{ encrypt_string_read }}"
      when: master_tokens_read.stdout != ""
    when:
      - encrypt_key is not defined

  - name: Write encrypt key locally
    copy:
      content: "{{ encrypt_string_read.stdout }}"
      dest: '/tmp/encrypt.key'
    become: false
    vars:
      ansible_become: false
    delegate_to: localhost
    when: encrypt_key is defined

  # Generate new encrypt key
  - block:
    - name: Generate the gossip encryption key
      command:
        cmd: consul keygen
      register: encrypt_key_gen
      when: 
        - encrypt_key is not defined
    
    - name: Write encryp key locally
      copy:
        content: "{{ encrypt_key_gen.stdout }}"
        dest: '/tmp/encrypt.key'
      become: false
      vars:
        ansible_become: false
      delegate_to: localhost
    when: encrypt_key is not defined
  when: 
    - tokens is not defined
    - inventory_hostname == consul_servers[0]
  
- name: Read gossip encryption key for servers that require it
  set_fact:
    encrypt: "{{ lookup('file', '/tmp/encrypt.key') }}"
  when:
    - encrypt is not defined
